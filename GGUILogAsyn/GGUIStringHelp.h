//--------------------------------------------------------------------
//  (C) oil
//  2012-04-29
//--------------------------------------------------------------------
#ifndef _GGUISTRINGHELP_H_
#define _GGUISTRINGHELP_H_
//--------------------------------------------------------------------
#include <strsafe.h>
//--------------------------------------------------------------------
namespace GGUI
{
	//--------------------------------------------------------------------
#if defined(_UNICODE) || defined(UNICODE)
#define SoStrLen wcslen
#define SoPrintf StringCbPrintfW
#else
#define SoStrLen strlen
#define SoPrintf StringCbPrintfA
#endif

	//--------------------------------------------------------------------
	//Ansi字符串转换成Unicode格式时，新字符串的字符个数（包括结束符）。
	//返回值为0表示出现错误。
	int UnicodeCountFromAnsi(const char* pString);
	//--------------------------------------------------------------------
	//Unicode字符串转换成Ansi格式时，新字符串的字节（Byte）个数（包括结束符）。
	//返回值为0表示出现错误。
	int AnsiCountFromUnicode(const wchar_t* pString);
	//--------------------------------------------------------------------
	//Utf8字符串转换成Unicode格式时，新字符串的字符个数（包括结束符）。
	//返回值为0表示出现错误。
	int UnicodeCountFromUtf8(const char* pString);
	//--------------------------------------------------------------------
	//Unicode字符串转换成Utf8格式时，新字符串的字节（Byte）个数（包括结束符）。
	//返回值为0表示出现错误。
	int Utf8CountFromUnicode(const wchar_t* pString);
	//--------------------------------------------------------------------
	//Ansi字符串转换成Unicode格式。
	//返回值存储在一个全局的字符数组内。
	//如果出现错误则字符数组的第一个元素为0，即返回值为空字符串""。
	wchar_t* AnsiToUnicode(const char* pSrcString);
	//--------------------------------------------------------------------
	//Unicode字符串转换成Ansi格式。
	//返回值存储在一个全局的字符数组内。
	//如果出现错误则字符数组的第一个元素为0，即返回值为空字符串""。
	//如果pNewStringByteCount为有效值，则会被赋值，新值为返回字符串的长度（单位字节，不包括结束符）。
	char* UnicodeToAnsi(const wchar_t* pSrcString, int* pNewStringLength=NULL);
	//--------------------------------------------------------------------
	//Utf8字符串转换成Unicode格式。
	//返回值存储在一个全局的字符数组内。
	//如果出现错误则字符数组的第一个元素为0，即返回值为空字符串""。
	wchar_t* Utf8ToUnicode(const char* pSrcString);
	//--------------------------------------------------------------------
	//Unicode字符串转换成Utf8格式。
	//返回值存储在一个全局的字符数组内。
	//如果出现错误则字符数组的第一个元素为0，即返回值为空字符串""。
	char* UnicodeToUtf8(const wchar_t* pSrcString);
	//--------------------------------------------------------------------
	//Ansi字符串转换成Utf8格式。
	//返回值存储在一个全局的字符数组内。
	//如果出现错误则字符数组的第一个元素为0，即返回值为空字符串""。
	char* AnsiToUtf8(const char* pSrcString);
	//--------------------------------------------------------------------
	//Utf8字符串转换成Ansi格式。
	//返回值存储在一个全局的字符数组内。
	//如果出现错误则字符数组的第一个元素为0，即返回值为空字符串""。
	char* Utf8ToAnsi(const char* pSrcString);
}
//--------------------------------------------------------------------
#endif //_GGUISTRINGHELP_H_
//--------------------------------------------------------------------
